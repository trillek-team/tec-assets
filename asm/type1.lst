2	00100000  	.ORG	0x100000                
4	00100000  	MOV	%sp,0x020000            0000F44000000200
8	00100008  	MOV	%r10,0x10FF00           0000E84000FF1000
9	00100010 begin_search_tda:	                        
10	00100010  	ADD	%r10,%r10,0x100         0081AA84
11	00100014  	IFEQ	%r10,0x112100           0000E87000211100
12	0010001c  	JMP	end_search_tda          13008425
14	00100020  	LOADB	%r0,%r10                0A000047
15	00100024  	IFNEQ	%r0,0xFF                FF008071
16	00100028  	JMP	begin_search_tda        04008425
18	0010002c  	ADD	%r1,%r10,1              01808684
19	00100030  	LOADB	%r0,%r1                 01000047
20	00100034  	IFNEQ	%r0,0x0E                0E008071
21	00100038  	JMP	begin_search_tda        04008425
23	0010003c  	ADD	%r1,%r10,2              02808684
24	00100040  	LOADB	%r0,%r1                 01000047
25	00100044  	IFNEQ	%r0,0x01                01008071
26	00100048  	JMP	begin_search_tda        04008425
28	0010004c end_search_tda:	                        
29	0010004c  	IFEQ	%r10,0x112100           0000E87000211100
30	00100054  	JMP	crash                   A1008425
31	00100058  	STORE	TDA_base_dev,%r10       0001A848
33	0010005c  	IFEQ	%r10,0xFFFFFFFF         0000E870FFFFFFFF
34	00100064  	JMP	crash                   A1008425
37	00100068  	ADD	%r0,%r10,0x0A           0A808284
39	0010006c  	MOV	%r1,0x001000            00108440
40	00100070  	STORE	%r0,%r1                 00000448
42	00100074  	ADD	%r0,%r10,0x08           08808284
43	00100078  	MOV	%r1,0                   00008440
44	0010007c  	STOREW	%r0,%r1                 00000449
47	00100080  	MOV	%r0,0x001000            00108040
48	00100084  	MOV	%r1,0x40                40008440
49	00100088  	CALL	clr_screen              39018426
53	0010008c  	MOV	%r10,0x10FF00           0000E84000FF1000
54	00100094 begin_search_gkeyb:	                        
55	00100094  	ADD	%r10,%r10,0x100         0081AA84
56	00100098  	IFEQ	%r10,0x112100           0000E87000211100
57	001000a0  	JMP	end_search_gkeyb        34008425
59	001000a4  	LOADB	%r0,%r10                0A000047
60	001000a8  	IFNEQ	%r0,0xFF                FF008071
61	001000ac  	JMP	begin_search_gkeyb      25008425
63	001000b0  	ADD	%r1,%r10,1              01808684
64	001000b4  	LOADB	%r0,%r1                 01000047
65	001000b8  	IFNEQ	%r0,0x03                03008071
66	001000bc  	JMP	begin_search_gkeyb      25008425
68	001000c0  	ADD	%r1,%r10,2              02808684
69	001000c4  	LOADB	%r0,%r1                 01000047
70	001000c8  	IFNEQ	%r0,0x01                01008071
71	001000cc  	JMP	begin_search_gkeyb      25008425
73	001000d0 end_search_gkeyb:	                        
74	001000d0  	IFEQ	%r10,0x112100           0000E87000211100
75	001000d8  	JMP	not_found               9C008425
77	001000dc  	STORE	GKeyb_base_dev,%r10     0401A848
80	001000e0  	MOV	%r0,0                   00008040
81	001000e4  	STOREB	col,%r0                 0000804A
82	001000e8  	STOREB	row,%r0                 0100804A
85	001000ec loop:	                        
87	001000ec  	LOADB	%r1,col                 00008447
88	001000f0  	LOADB	%r0,row                 01008047
89	001000f4  	CALL	get_offset_from_row_col A3008426
90	001000f8  	ADD	%r0,%r0,0x001000        00108084
93	001000fc  	LOADW	%r3,blink               02008C46
94	00100100  	ADD	%r3,%r3,1               01C08C84
95	00100104  	IFL	%r3,256                 00018C72
96	00100108  	JMP	blink_off               4B008425
98	0010010c blink_on:	                        
99	0010010c  	IFL	%r3,512                 00028C72
100	00100110  	JMP	blink_on_real           46008425
101	00100114  	MOV	%r3,0                   00008C40
103	00100118 blink_on_real:	                        
104	00100118  	STOREW	blink,%r3               02008C49
106	0010011c  	ADD	%r8,%r0,1               0100A084
107	00100120  	MOV	%r3,0xF4                F4008C40
108	00100124  	STOREB	%r8,%r3                 08000C4A
110	00100128  	JMP	read_keyb               4F008425
112	0010012c blink_off:	                        
113	0010012c  	STOREW	blink,%r3               02008C49
115	00100130  	ADD	%r8,%r0,1               0100A084
116	00100134  	MOV	%r3,0x4F                4F008C40
117	00100138  	STOREB	%r8,%r3                 08000C4A
121	0010013c read_keyb:	                        
122	0010013c  	MOV	%r8,%r0                 00002040
123	00100140  	LOAD	%r0,GKeyb_base_dev      04018045
124	00100144  	ADD	%r1,%r0,0x12            12008484
126	00100148  	LOADW	%r2,%r1                 01000846
127	0010014c  	IFEQ	%r2,0                   00008870
128	00100150  	JMP	loop                    3B008425
130	00100154  	ADD	%r1,%r0,0x08            08008484
131	00100158  	MOV	%r2,1                   01008840
132	0010015c  	STOREW	%r1,%r2                 01000849
135	00100160  	ADD	%r1,%r0,0x0A            0A008484
136	00100164  	LOADB	%r4,%r1                 01001047
138	00100168  	IFEQ	%r4,0x0D                0D009070
139	0010016c  	JMP	enter                   6D008425
141	00100170  	IFEQ	%r4,0x08                08009070
142	00100174  	JMP	delete                  69008425
144	00100178  	IFEQ	%r4,0x14                14009070
145	0010017c  	JMP	arrow_left              71008425
147	00100180  	IFEQ	%r4,0x15                15009070
148	00100184  	JMP	arrow_right             76008425
150	00100188  	IFL	%r4,0x20                20009072
151	0010018c  	JMP	loop                    3B008425
153	00100190  	OR	%r4,%r4,0x4F00          0000D181004F0000
154	00100198  	STOREW	%r8,%r4                 08001049
156	0010019c  	CALL	inc_cursor              7B008426
158	001001a0  	JMP	loop                    3B008425
161	001001a4 delete:	                        
162	001001a4  	MOV	%r4,0x4F20              204F9040
163	001001a8  	STOREW	%r8,%r4                 08001049
164	001001ac  	CALL	dec_cursor              8F008426
166	001001b0  	JMP	loop                    3B008425
169	001001b4 enter:	                        
170	001001b4  	MOV	%r4,0x4F20              204F9040
171	001001b8  	STOREW	%r8,%r4                 08001049
172	001001bc  	CALL	next_line               87008426
173	001001c0  	JMP	loop                    3B008425
176	001001c4 arrow_left:	                        
178	001001c4  	ADD	%r8,%r8,1               0100A284
179	001001c8  	MOV	%r4,0x4F                4F009040
180	001001cc  	STOREB	%r8,%r4                 0800104A
181	001001d0  	CALL	dec_cursor              8F008426
182	001001d4  	JMP	loop                    3B008425
185	001001d8 arrow_right:	                        
187	001001d8  	ADD	%r8,%r8,1               0100A284
188	001001dc  	MOV	%r4,0x4F                4F009040
189	001001e0  	STOREB	%r8,%r4                 0800104A
190	001001e4  	CALL	inc_cursor              7B008426
191	001001e8  	JMP	loop                    3B008425
194	001001ec inc_cursor:	                        
195	001001ec  	LOADB	%r0,col                 00008047
196	001001f0  	ADD	%r0,%r0,1               01008084
197	001001f4  	IFL	%r0,40                  28008072
198	001001f8  	JMP	inc_cursor_end          85008425
200	001001fc  	MOV	%r0,0                   00008040
201	00100200  	LOAD	%r1,row                 01008445
202	00100204  	ADD	%r1,%r1,1               01408484
203	00100208  	IFEQ	%r1,30                  1E008470
204	0010020c  	MOV	%r1,0                   00008440
205	00100210  	STOREB	row,%r1                 0100844A
207	00100214 inc_cursor_end:	                        
208	00100214  	STOREB	col,%r0                 0000804A
210	00100218  	RET	                        00000001
213	0010021c next_line:	                        
214	0010021c  	LOAD	%r1,row                 01008445
215	00100220  	ADD	%r1,%r1,1               01408484
216	00100224  	IFEQ	%r1,30                  1E008470
217	00100228  	MOV	%r1,0                   00008440
218	0010022c  	STOREB	row,%r1                 0100844A
220	00100230  	MOV	%r0,0                   00008040
221	00100234  	STOREB	col,%r0                 0000804A
223	00100238  	RET	                        00000001
226	0010023c dec_cursor:	                        
227	0010023c  	LOADB	%r0,col                 00008047
228	00100240  	SUB	%r0,%r0,1               01008086
229	00100244  	IFSL	%r0,0                   00008073
230	00100248  	JMP	dec_cursor_reset_col    94008425
231	0010024c  	JMP	dec_cursor_end          9A008425
233	00100250 dec_cursor_reset_col:	                        
234	00100250  	MOV	%r0,39                  27008040
235	00100254  	LOAD	%r1,row                 01008445
236	00100258  	SUB	%r1,%r1,1               01408486
237	0010025c  	IFSL	%r1,0                   00008473
238	00100260  	MOV	%r1,29                  1D008440
239	00100264  	STOREB	row,%r1                 0100844A
241	00100268 dec_cursor_end:	                        
242	00100268  	STOREB	col,%r0                 0000804A
244	0010026c  	RET	                        00000001
247	00100270 not_found:	                        
249	00100270  	MOV	%r1,0x001000            00108440
250	00100274  	MOV	%r0,str_not_found       0000C04054051000
251	0010027c  	MOV	%r2,0x4D                4D008840
252	00100280  	CALL	print                   A7008426
254	00100284 crash:	                        
255	00100284  	SLEEP	                        00000000
5	00100288  	.DD	0xBEEFCAFE              FECAEFBE
13	0010028c get_offset_from_row_col:	                        
14	0010028c  	LLS	%r1,%r1,1               0140848A
16	00100290  	MUL	%r0,%r0,80              5000808F
17	00100294  	ADD	%r0,%r0,%r1             01000084
19	00100298  	RET	                        00000001
27	0010029c print:	                        
28	0010029c  	LLS	%r2,%r2,8               0880888A
30	001002a0 print_loop:	                        
31	001002a0  	LOADB	%r3,%r0                 00000C47
32	001002a4  	IFEQ	%r3,0                   00008C70
33	001002a8  	JMP	print_end               B0008425
35	001002ac  	OR	%r3,%r3,%r2             02C00C81
36	001002b0  	STOREW	%r1,%r3                 01000C49
38	001002b4  	ADD	%r1,%r1,2               02408484
39	001002b8  	ADD	%r0,%r0,1               01008084
40	001002bc  	JMP	print_loop              A8008425
42	001002c0 print_end:	                        
44	001002c0  	RET	                        00000001
52	001002c4 print_hex_b:	                        
53	001002c4  	PUSH	%r5                     05000024
55	001002c8  	LLS	%r2,%r2,8               0880888A
56	001002cc  	LRS	%r5,%r0,4               0400948B
57	001002d0  	AND	%r0,%r0,0x0000000F      0F008080
62	001002d4  	ADD	%r5,%r5,55              37409584
63	001002d8  	IFL	%r5,A                   41009472
64	001002dc  	SUB	%r5,%r5,7               07409586
66	001002e0  	OR	%r5,%r5,%r2             02401581
67	001002e4  	STOREW	%r1,%r5                 01001449
70	001002e8  	ADD	%r1,%r1,2               02408484
71	001002ec  	ADD	%r5,%r0,55              37009484
72	001002f0  	IFL	%r5,A                   41009472
73	001002f4  	SUB	%r5,%r5,7               07409586
75	001002f8  	OR	%r5,%r5,%r2             02401581
76	001002fc  	STOREW	%r1,%r5                 01001449
78	00100300  	POP	%r5                     05000023
80	00100304  	RET	                        00000001
88	00100308 print_hex_w:	                        
89	00100308  	PUSH	%r5                     05000024
91	0010030c  	LLS	%r2,%r2,8               0880888A
93	00100310  	LRS	%r5,%r0,12              0C00948B
96	00100314  	ADD	%r5,%r5,55              37409584
97	00100318  	IFL	%r5,A                   41009472
98	0010031c  	SUB	%r5,%r5,7               07409586
100	00100320  	OR	%r5,%r5,%r2             02401581
101	00100324  	STOREW	%r1,%r5                 01001449
104	00100328  	LRS	%r5,%r0,8               0800948B
105	0010032c  	AND	%r5,%r5,0x0F            0F409580
107	00100330  	ADD	%r1,%r1,2               02408484
108	00100334  	ADD	%r5,%r5,55              37409584
109	00100338  	IFL	%r5,A                   41009472
110	0010033c  	SUB	%r5,%r5,7               07409586
112	00100340  	OR	%r5,%r5,%r2             02401581
113	00100344  	STOREW	%r1,%r5                 01001449
116	00100348  	LRS	%r5,%r0,4               0400948B
117	0010034c  	AND	%r5,%r5,0x0F            0F409580
119	00100350  	ADD	%r1,%r1,2               02408484
120	00100354  	ADD	%r5,%r5,55              37409584
121	00100358  	IFL	%r5,A                   41009472
122	0010035c  	SUB	%r5,%r5,7               07409586
124	00100360  	OR	%r5,%r5,%r2             02401581
125	00100364  	STOREW	%r1,%r5                 01001449
128	00100368  	AND	%r5,%r0,0x0F            0F009480
130	0010036c  	ADD	%r1,%r1,2               02408484
131	00100370  	ADD	%r5,%r5,55              37409584
132	00100374  	IFL	%r5,A                   41009472
133	00100378  	SUB	%r5,%r5,7               07409586
135	0010037c  	OR	%r5,%r5,%r2             02401581
136	00100380  	STOREW	%r1,%r5                 01001449
138	00100384  	POP	%r5                     05000023
140	00100388  	RET	                        00000001
148	0010038c print_hex_dw:	                        
149	0010038c  	PUSH	%r5                     05000024
151	00100390  	LLS	%r2,%r2,8               0880888A
153	00100394  	LRS	%r5,%r0,28              1C00948B
156	00100398  	ADD	%r5,%r5,55              37409584
157	0010039c  	IFL	%r5,A                   41009472
158	001003a0  	SUB	%r5,%r5,7               07409586
160	001003a4  	OR	%r5,%r5,%r2             02401581
161	001003a8  	STOREW	%r1,%r5                 01001449
164	001003ac  	LRS	%r5,%r0,24              1800948B
165	001003b0  	AND	%r5,%r5,0x0F            0F409580
167	001003b4  	ADD	%r1,%r1,2               02408484
168	001003b8  	ADD	%r5,%r5,55              37409584
169	001003bc  	IFL	%r5,A                   41009472
170	001003c0  	SUB	%r5,%r5,7               07409586
172	001003c4  	OR	%r5,%r5,%r2             02401581
173	001003c8  	STOREW	%r1,%r5                 01001449
176	001003cc  	LRS	%r5,%r0,20              1400948B
177	001003d0  	AND	%r5,%r5,0x0F            0F409580
179	001003d4  	ADD	%r1,%r1,2               02408484
180	001003d8  	ADD	%r5,%r5,55              37409584
181	001003dc  	IFL	%r5,A                   41009472
182	001003e0  	SUB	%r5,%r5,7               07409586
184	001003e4  	OR	%r5,%r5,%r2             02401581
185	001003e8  	STOREW	%r1,%r5                 01001449
188	001003ec  	LRS	%r5,%r0,16              1000948B
189	001003f0  	AND	%r5,%r5,0x0F            0F409580
191	001003f4  	ADD	%r1,%r1,2               02408484
192	001003f8  	ADD	%r5,%r5,55              37409584
193	001003fc  	IFL	%r5,A                   41009472
194	00100400  	SUB	%r5,%r5,7               07409586
196	00100404  	OR	%r5,%r5,%r2             02401581
197	00100408  	STOREW	%r1,%r5                 01001449
200	0010040c  	LRS	%r5,%r0,12              0C00948B
201	00100410  	AND	%r5,%r5,0x0F            0F409580
203	00100414  	ADD	%r1,%r1,2               02408484
204	00100418  	ADD	%r5,%r5,55              37409584
205	0010041c  	IFL	%r5,A                   41009472
206	00100420  	SUB	%r5,%r5,7               07409586
208	00100424  	OR	%r5,%r5,%r2             02401581
209	00100428  	STOREW	%r1,%r5                 01001449
212	0010042c  	LRS	%r5,%r0,8               0800948B
213	00100430  	AND	%r5,%r5,0x0F            0F409580
215	00100434  	ADD	%r1,%r1,2               02408484
216	00100438  	ADD	%r5,%r5,55              37409584
217	0010043c  	IFL	%r5,A                   41009472
218	00100440  	SUB	%r5,%r5,7               07409586
220	00100444  	OR	%r5,%r5,%r2             02401581
221	00100448  	STOREW	%r1,%r5                 01001449
224	0010044c  	LRS	%r5,%r0,4               0400948B
225	00100450  	AND	%r5,%r5,0x0F            0F409580
227	00100454  	ADD	%r1,%r1,2               02408484
228	00100458  	ADD	%r5,%r5,55              37409584
229	0010045c  	IFL	%r5,A                   41009472
230	00100460  	SUB	%r5,%r5,7               07409586
232	00100464  	OR	%r5,%r5,%r2             02401581
233	00100468  	STOREW	%r1,%r5                 01001449
236	0010046c  	AND	%r5,%r0,0x0F            0F009480
238	00100470  	ADD	%r1,%r1,2               02408484
239	00100474  	ADD	%r5,%r5,55              37409584
240	00100478  	IFL	%r5,A                   41009472
241	0010047c  	SUB	%r5,%r5,7               07409586
243	00100480  	OR	%r5,%r5,%r2             02401581
244	00100484  	STOREW	%r1,%r5                 01001449
246	00100488  	POP	%r5                     05000023
248	0010048c  	RET	                        00000001
256	00100490 print_uint:	                        
257	00100490  	PUSH	%r5                     05000024
258	00100494  	PUSH	%y                      0B000024
260	00100498  	LLS	%r2,%r2,8               0880888A
261	0010049c  	MOV	%r5,0                   00009440
263	001004a0 print_uint_divloop:	                        
264	001004a0  	DIV	%r0,%r0,10              0A008091
265	001004a4  	PUSH	%y                      0B000024
266	001004a8  	ADD	%r5,%r5,1               01409584
268	001004ac  	IFNEQ	%r0,0                   00008071
269	001004b0  	JMP	print_uint_divloop      28018425
271	001004b4 print_uint_printloop:	                        
272	001004b4  	POP	%r0                     00000023
273	001004b8  	ADD	%r0,%r0,0               30008084
274	001004bc  	OR	%r0,%r0,%r2             02000081
275	001004c0  	STOREW	%r1,%r0                 01000049
277	001004c4  	SUB	%r5,%r5,1               01409586
278	001004c8  	ADD	%r1,%r1,2               02408484
280	001004cc  	IFSLE	%r5,0                   00009475
281	001004d0  	JMP	print_uint_end          36018425
282	001004d4  	JMP	print_uint_printloop    2D018425
284	001004d8 print_uint_end:	                        
285	001004d8  	POP	%y                      0B000023
286	001004dc  	POP	%r5                     05000023
288	001004e0  	RET	                        00000001
295	001004e4 clr_screen:	                        
296	001004e4  	MOV	%r3,2400                60098C40
297	001004e8  	ADD	%r3,%r3,%r0             00C00C84
299	001004ec  	LLS	%r1,%r1,8               0840848A
300	001004f0  	OR	%r1,%r1,0x20            20408481
301	001004f4  	LLS	%r2,%r1,16              1040888A
302	001004f8  	OR	%r1,%r1,%r2             02400481
304	001004fc clr_screen_loop:	                        
305	001004fc  	STORE	%r0,%r1                 00000448
306	00100500  	ADD	%r0,%r0,4               04008084
308	00100504  	IFLE	%r0,%r3                 03000074
309	00100508  	JMP	clr_screen_loop         3F018425
311	0010050c  	RET	                        00000001
319	00100510 hwn:	                        
320	00100510  	PUSH	%r4                     04000024
321	00100514  	MOV	%r3,%r0                 00000C40
322	00100518  	MOV	%r0,0                   00008040
323	0010051c  	MOV	%r1,0                   00008440
325	00100520 hwn_for_loop:	                        
327	00100520  	LLS	%r4,%r1,8               0840908A
328	00100524  	ADD	%r4,%r4,0x110000        0000D18400001100
331	0010052c  	LOADB	%r2,%r4                 04000847
332	00100530  	IFNEQ	%r2,0xFF                FF008871
333	00100534  	JMP	hwn_check_cond_for_loop 50018425
335	00100538  	STOREB	%r3,%r0,%r1             00C00498
336	0010053c  	ADD	%r0,%r0,1               01008084
338	00100540 hwn_check_cond_for_loop:	                        
340	00100540  	ADD	%r1,%r1,1               01408484
341	00100544  	IFL	%r1,32                  20008472
342	00100548  	JMP	hwn_for_loop            48018425
344	0010054c end_hwn:	                        
345	0010054c  	POP	%r4                     04000023
346	00100550  	RET	                        00000001
261	00100554 str_not_found:	                        
262	00100554  	.DB	Generic Keyboard not found.,047 65 6E 65 72 69 63 20 4B 65 79 62 6F 61 72 64 20 6E 6F 74 20 66 6F 75 6E 64 2E 00
266	00000000  	.ORG	0x0                     
268	00000000 col:	.db	0                       00
269	00000001 row:	.db	0                       00
270	00000002 blink:	.dw	0                       0000
272	00000100  	.ORG	0x0100                  
273	00000100 TDA_base_dev:	.dd	0                       00000000
274	00000104 GKeyb_base_dev:	.dd	0                       00000000
Symbols:
001000d0  end_search_gkeyb
00000002  blink
00000001  row
00100554  str_not_found
001004d8  print_uint_end
00100540  hwn_check_cond_for_loop
00100094  begin_search_gkeyb
00100284  crash
0010004c  end_search_tda
0010010c  blink_on
0010038c  print_hex_dw
00100118  blink_on_real
0010013c  read_keyb
0010021c  next_line
0010029c  print
001004fc  clr_screen_loop
001004b4  print_uint_printloop
001004a0  print_uint_divloop
0010012c  blink_off
00100214  inc_cursor_end
00100308  print_hex_w
0010054c  end_hwn
00100270  not_found
001002a0  print_loop
0010028c  get_offset_from_row_col
001001d8  arrow_right
00000104  GKeyb_base_dev
00100010  begin_search_tda
00100510  hwn
001002c0  print_end
001000ec  loop
001004e4  clr_screen
00100490  print_uint
001001c4  arrow_left
00100520  hwn_for_loop
001001a4  delete
001001b4  enter
00000100  TDA_base_dev
001001ec  inc_cursor
0010023c  dec_cursor
00000000  col
001002c4  print_hex_b
00100250  dec_cursor_reset_col
00100268  dec_cursor_end
